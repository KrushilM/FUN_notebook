import os
import numpy as np
import pandas as pd
import pyswmm
from pyswmm import Simulation,LidControls, LidGroups, LidUnit, Subcatchments
from geneticalgorithm import geneticalgorithm as ga

def fitness_function(x):
    a = x[0]
    b = x[1]
    with Simulation('F:\Krushil\M.Tech-project\python\inp\TRIAL1_WITHOUTLID.inp') as sim:
        sim.step_advance(600)
        base_runoff = 0
        subcatchments = Subcatchments(sim)
        SC1 = subcatchments["SC1"]
        for step in sim:
            pass
        base_runoff = SC1.statistics["runoff"]
    with Simulation('F:\Krushil\M.Tech-project\python\inp\TRIAL1_WITHLID.inp') as sim:
        sim.step_advance(600)
        subcatchments = Subcatchments(sim)
        SC1 = subcatchments["SC1"]
        lid_runoff = 0
        lid_unit = LidGroups(sim)["SC1"]
        IB = lid_unit[0]
        PP = lid_unit[1]
        IB.unit_area = a*SC1.area*10**4
        PP.unit_area = b*0.2*SC1.area*10**4
        IB_AREA = IB.unit_area
        PP_AREA = PP.unit_area
        for step in sim:
            pass
        lid_runoff = SC1.statistics["runoff"]
    F1 = (base_runoff-lid_runoff)*100/base_runoff
    F2 = IB_AREA*500 +  PP_AREA*300
    return 1/F1,F2

from pymoo.optimize import minimize
from pymoo.model.problem import Problem
import numpy as np
class ProblemWrapper(Problem):
    
    def _evaluate(self,designs, out, *args, **kwargs):
        res = []
        for design in designs:
            res.append(fitness_function(design))
            
        out['F'] = np.array(res)

problem  = ProblemWrapper(n_var= 2, n_obj = 2, xl = [0.001, 0.0], xu= [0.1, 1])
from pymoo.algorithms.nsga2 import NSGA2
algorithm = NSGA2(pop_size = 100)
stop_criteria = ('n_gen',100)

results = minimize(
problem = problem,
algorithm=algorithm,
termination = stop_criteria)

Runoff_reduction = 1/results.F.T[0]
Cost = results.F.T[1]

import plotly.graph_objects as go
fig = go.Figure(data = go.Scatter(x = Cost ,y = Runoff_reduction , mode = 'markers'))
fig.show()